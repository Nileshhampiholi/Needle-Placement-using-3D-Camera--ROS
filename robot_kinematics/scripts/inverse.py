import math
import numpy as np
import sympy as sym
import mpmath as mp
c1, c2, c3, c4, c5, c6, c7 = sym.symbols("c1, c2, c3, c4, c5, c6, c7")

s1, s2, s3, s4, s5, s6, s7 = sym.symbols("s1, s2, s3, s4, s5, s6, s7")

T0_1 =  sym.Matrix([
         [c1,  -s1,  0, 0     ],
         [s1,   c1,  0, 0     ],
         [0,    0,   1, 0.333 ],
         [0,    0,   0, 1    ]])

T1_2 =   sym.Matrix([
         [c2,   -s2,    0,   0 ],
         [0,     0,     1,   0 ],
         [-s2,  -c2,    0,   0 ],
         [0,     0,     0,   1 ]])

T2_3 =   sym.Matrix([
         [c3, -s3,   0,  0    ],
         [0,   0,   -1, -0.316],
         [s3,  c3,   0,  0    ],
         [0,   0,    0,  1    ]])

T3_4 =   sym.Matrix([
         [c4, -s4,   0,  0.0825],
         [0,   0,   -1,  0     ],
         [s4,  c4,   0,  0     ],
         [0,   0,    0,  1     ]])

T4_5 =   sym.Matrix([
         [ c5,  -s5,   0, -0.0825 ],
         [ 0,    0,    1,  0.384  ],
         [-s5,  -c5,   0,  0      ],
         [ 0,    0,    0,  1      ]])

T5_6 =   sym.Matrix([
         [c6,  -s6,  0,  0],
         [0,    0,  -1,  0],
         [s6,   c6,  0,  0],
         [0,    0,   0,  1]])

T6_7 =   sym.Matrix([
         [c7, -s7,  0,  0.088],
         [0,   0,  -1,  0    ],
         [s7,  c7,  0,  0    ],
         [0,   0,   0,  1    ]])

T7_F =  sym.Matrix([
         [1,  0,  0,  0    ],
         [0,  1,  0,  0    ],
         [0,  0,  1,  0.107],
         [0,  0,  0,  1    ]])


T0_3 = T0_1*T1_2*T2_3
T0_F = T0_3*T3_4*T4_5*T5_6*T6_7*T7_F

#print (T0_3)

print('------------------------------------------------------------------------------------------------------------------------')

#print (T0_F)

for i in range(4):
    print('----------------------------------------------------------------------------------------------------------------')
    print (T0_F.row(i))
    print('----------------------------------------------------------------------------------------------------------------')



Tro1 = Matrix([
[c7*(c6*(c5*(c1*s2*s4 + c4*(c1*c2*c3 - s1*s3)) - s5*(c1*c2*s3 + c3*s1)) + s6*(c1*c4*s2 - s4*(c1*c2*c3 - s1*s3))) + s7*(c5*(c1*c2*s3 + c3*s1) + s5*(c1*s2*s4 + c4*(c1*c2*c3 - s1*s3))), 
c7*(c5*(c1*c2*s3 + c3*s1) + s5*(c1*s2*s4 + c4*(c1*c2*c3 - s1*s3))) - s7*(c6*(c5*(c1*s2*s4 + c4*(c1*c2*c3 - s1*s3)) - s5*(c1*c2*s3 + c3*s1)) + s6*(c1*c4*s2 - s4*(c1*c2*c3 - s1*s3))),
-c6*(c1*c4*s2 - s4*(c1*c2*c3 - s1*s3)) + s6*(c5*(c1*s2*s4 + c4*(c1*c2*c3 - s1*s3)) - s5*(c1*c2*s3 + c3*s1)), 

0.0825*c1*c2*c3 + 0.384*c1*c4*s2 - 0.0825*c1*s2*s4 + 0.316*c1*s2 - 0.0825*c4*(c1*c2*c3 - s1*s3) + 0.088*c6*(c5*(c1*s2*s4 + c4*(c1*c2*c3 - s1*s3)) - s5*(c1*c2*s3 + c3*s1)) - 0.107*c6*(c1*c4*s2 - s4*(c1*c2*c3 - s1*s3)) - 0.0825*s1*s3 - 0.384*s4*(c1*c2*c3 - s1*s3) + 0.107*s6*(c5*(c1*s2*s4 + c4*(c1*c2*c3 - s1*s3)) - s5*(c1*c2*s3 + c3*s1)) + 0.088*s6*(c1*c4*s2 - s4*(c1*c2*c3 - s1*s3))]])


Trow2 =Matrix([
[c7*(c6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - s5*(-c1*c3 + c2*s1*s3)) + s6*(c4*s1*s2 - s4*(c1*s3 + c2*c3*s1))) + s7*(c5*(-c1*c3 + c2*s1*s3) + s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4)), 
c7*(c5*(-c1*c3 + c2*s1*s3) + s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4)) - s7*(c6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - s5*(-c1*c3 + c2*s1*s3)) + s6*(c4*s1*s2 - s4*(c1*s3 + c2*c3*s1))), 
-c6*(c4*s1*s2 - s4*(c1*s3 + c2*c3*s1)) + s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - s5*(-c1*c3 + c2*s1*s3)),
 0.0825*c1*s3 + 0.0825*c2*c3*s1 + 0.384*c4*s1*s2 - 0.0825*c4*(c1*s3 + c2*c3*s1) + 0.088*c6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - s5*(-c1*c3 + c2*s1*s3)) - 0.107*c6*(c4*s1*s2 - s4*(c1*s3 + c2*c3*s1)) - 0.0825*s1*s2*s4 + 0.316*s1*s2 - 0.384*s4*(c1*s3 + c2*c3*s1) + 0.107*s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - s5*(-c1*c3 + c2*s1*s3)) + 0.088*s6*(c4*s1*s2 - s4*(c1*s3 + c2*c3*s1))]])


Trow3 = Matrix([[c7*(c6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + s6*(c2*c4 + c3*s2*s4)) + s7*(-c5*s2*s3 + s5*(c2*s4 - c3*c4*s2)),
c7*(-c5*s2*s3 + s5*(c2*s4 - c3*c4*s2)) - s7*(c6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + s6*(c2*c4 + c3*s2*s4)),
-c6*(c2*c4 + c3*s2*s4) + s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5),
0.384*c2*c4 - 0.0825*c2*s4 + 0.316*c2 + 0.0825*c3*c4*s2 + 0.384*c3*s2*s4 - 0.0825*c3*s2 - 0.107*c6*(c2*c4 + c3*s2*s4) + 0.088*c6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + 0.088*s6*(c2*c4 + c3*s2*s4) + 0.107*s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + 0.333]])

Trow4 = Matrix([[0, 0, 0, 1]])











